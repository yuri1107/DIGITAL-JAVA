create table student (st_num int, st_name varchar(40), st_identification_num varchar(14), st_type varchar(2), constraint student_pk primary key(st_num));


select 속성명 from 테이블명;
select 속성명 from 데이터베이스.테이블명;
select 속성명1, 속성명2 from 데이터베이스.테이블명;

//조건이 없는 테이블A안에서 속성명1과 속성명2의 값들만 확인



select 속성명1, 속성명2 
	from 데이터베이스.테이블A
	where 조건;

//데이터베이스 안에 있는 테이블A에서 조건을 만족하는 행들 중에 속성명1과 속성명2의 값들만 확인

 insert into 테이블A (속성명1, 속성명2, 속성명N)
	valuse (값1, 값2, 값N);
테이블A 안에 있는 속성명1에 값1을 저장하고, 속성명2에 값2를 저장하고, 속성명N에 값N을 저장하여 행을 추가하는 SQL문.
1. 속성에 지정된 타입과 값의 타입이 같은지 확인
2. 속성에 지정된 제약조건에 값이 맞는지 확인
insert 할 때 생략할 수 없는 속성들
 - 기본키인 속성
 - 제약조건이 NOT NULL이고, 기본값이 없는 경우

*insert 할 때 속성의 갯수와 값의 갯수가 같아야 한다. 


update 테이블A set 속성명1 = 값1, 속성명2 = 값2, 속성명N=값N
	where 조건;

//테이블A에서 조건을 만족하는 행들의 속성명1을 값1로, 속성명2를 값2로, 속성명N에 값N으로 수정하는 SQL문. 조건에는 기본키를 많이 이용을 한다.


delete from 테이블A where 조건;

//테이블A에서 조건을 만족하는 모든 행을 삭제하는 SQL문


******************************

where절은 참 또는 거짓으로 판별할 수 있어야 한다.
where절에서 = 은 같다를 의미한다.
where절에서 같지않다 는 != 를 쓰거나 <> 을 쓴다.
where절에서 null체크는 is NULL 을 쓰거나 is not NULL을 쓴다.

*******************************

drop table if exists 테이블A;

테이블 생성 시 기존에 있는 테이블이면 지우고 다시 만들 때 사용하는 SQL문으로 테이블 A가 있으면 삭제, 없으면 아무일도 안함.
단, 테이블 안에 데이터가 삭제되기 때문에 데이터를 삭제하면 안되는경우 사용해서는 안된다.