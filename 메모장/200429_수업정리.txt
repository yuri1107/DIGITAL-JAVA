상속
- 부모클래스의 멤버변수나 메서드를 자식클래스가 물려받는것
- 상속에서 부모클래스는 하나만 가능하다.
- A는 B이다 라는 말이 성립 될 경우 상속이다 (B가 부모 A가 자식)

- 부모의 멤버변수나 메서드의 접근제한자가 private이면 자식클래스에서 사용할 수 없다
   그래서 private로 된 멤버변수의 경우 getter 와 setter를 만들어서 접근한다.
- 자식클래스의 생성자에서 부모클래스의 생성자를 super()를 통해 호출할 수 있다.
- 상속은 꼭 해야하는건 아니다. 하지만 상속을 하면 코드를 재사용할 수 있기 때문에 상속을 받는게 낫다.
- 자식클래스의 생성자에서는 부모클래스의 생성자를 사용하지 않으면 자동으로 super()라는 부모의 기본 생성자가 호출된다.

- static 메서드(클래스메서드)는 다형성이 적용되지 않아 오버라이딩이 안된다.(@Override를 쓸수없음) 하지만 해당 메소드를 작성할수는 있는데 이러한 상황을 하이딩이라고 한다.

클래스
- 클래스의 생성자가 하나도 없다면 클래스가 메모리에 올라갈 때 기본 생성성자가 추가됨
- 객체(인스턴스)메서드는 클래스메서드에서 사용할 수 없다.
  클래스메서드는 객체를 만들지 않고 사용 가능하나 인스턴스 메서드는 인스턴스(객체)를 생성하고 난 뒤에 사용하기 때문에 그냥 사용할 수는 없다. (객체를 만들어주면 가능)
  메인 메서드는 클래스메서드임.

final - 최종적인, 수정할 수 없음. (제어자 중 하나)
- 변수	: 상수로 바뀜
- 메서드	: 오버라이딩을 할 수 없다. (오버로딩은 가능)
- 클래스	: 부모클래스가 될 수 없다. 누군가의 자식 클래스는 될 수 있다. 쉽게말해 고자
- final 멤버변수는 명시적 초기화를 하던지 생성자에서 초기화를 해야한다.

재귀 메서드
- 메서드 안에서 자신을 호출하는 형태의 메서드
- 재귀 메서드는 빠져나가기 위한 조건을 걸어줘야 한다.
- 재귀메서드를 사용하기 전에 반복문을 먼저 이용하여 해결해보고 복잡하게 코드를 작성하는것보다 재귀 메서드를 이용하여 간결하게 작성하는것이 좋다고 판단될 때 재귀메서드를 이용해라.
* 상속에서 실수할 수 있으니 조심

도형 Shape : 부모 (오브젝트)
원 Circle : 자식 
삼각형 Triangle : 자식
사각형 Square : 자식 (증조)

오버로딩 (Overloading) : 동일한 이름을 가진 메소드/생성자 가 여러개 존재하는것.
오버라이딩 : 상속관계에 있는 클래스간에 같은 이름의 메소드를 정의하는것.

구분		오버로딩		오버라이딩
메소드이름	동일		동일
매개변수,타입	다름		동일
리턴타입		상관없음		동일

오버로딩과 오버라이딩의 성립조건. 오버라이딩은 모든게 동일해야한다.

****** 
------------------------------------------------------------------------------------
현재까지 생성된 도형의 갯수를 출력하도록 코드를 수정하세요

현재까지 생성된 원과 사각형의 갯수를 각각 출력하도록 코드를 수정하세요.
-------
두 정수의 합을 알려주는 메서드

두 실수의 합을 알려주는 메서드

세 실수의 합을 알려주는 메서드

n개의 실수의 합을 알려주는 메서드
-------
1부터 10까지 합을 구하는 코드를 재귀메소드로 작성해보세요.