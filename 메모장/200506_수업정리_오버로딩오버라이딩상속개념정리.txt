오버라이딩
- 상속받은 자식클래스에서 부모클래스의 메소드를 재정의하는것
1. 부모 클래스의 메소드의 선언부가 완전히 동일

오버로딩
- 동일한 메소드명을 가진 메소드가 여러개인 경우
1. 매개변수의 갯수가 다름
2. 매개변수의 타입이 다름

상속 (extends) : 부모클래스에 있는 멤버 변수와 메소드를 상속
- 단, 상속을 받아도 다 사용할 수 있는건 아니다. (private)

추상 클래스
- 추상 메소드를 가진 클래스

추상메소드
- 메소드가 선언만 되어있고 구현이 안된 메소드
 abstract 리턴타입 메서드명(매개변수);
- 부모클래스를 상속받았을때 특정 메소드가 자식클래스들에서 자주 오버라이딩 된다면 해당 메소드는 주로 추상 메소드로 작성한다.

추상메소드가 있는 클래스를 상속받으면 반드시 추상 메소드를 구현해야한다. (오버라이딩)

인터페이스 (p.390 장점 목록 있음)
- 상수와 추상메소드만 가질 수 있다. (일반 멤버변수 없음 일반메소드 없음)
- interface 라는 키워드를 이용.
- 기능 요약서 라고 생각하면 된다. (있는 기능 목록 나열) (책의 목차같은느낌)
- 자체적으로 사용할 수 없고 인터페스를 구현한 클래스로 활용한다. (implements)
- interface는 멤버변수가 없기 때문에 기능을 메소드로 정리할 때 항상 염두에 두고 작성해야한다.


클래스의 상속 : 부모가 1명
인터페이스의 상속 : 부모가 n명 (일수도 있음)

클래스는 interface를 이용하여 구현도 가능하고 상속도 가능.

class A extends B implements C { }

A,B : class

C : interface


익명클래스 : 클래스의 이름이 없어서 1회용
- [인터페이스를 이용하여 구현한 클래스]가 필요할 때 사용
- 어떤 메서드들은 매개변수로 [특정 인터페이스를 구현한 클래스]를 요구하는 경우가 있다.