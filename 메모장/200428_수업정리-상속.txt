1. 상속 - 부모클래스한테 멤버변수나 멤버메소드를 물려받는것
키워드 : extends 
상속은 클래스를 선언(생성)할 때 받는것(객체 아님)

class 클래스명 extends 부모클래스명 {
//멤버변수
//멤버메서드
//생성자
}

//상속받은 클래스는 부모클래스의
public 또는 protected로 되어있는 멤버변수와 멤버메서드를 사용할 수 있다.
생성자와 초기화블럭은 상속되지 않고 멤버만 상속되지만 부모의 생성자를 호출할 수는 있다.
단, 접근제한자가 private 인 멤버는 상속받을 수 없다.
부모는 1명만 가능하다.

A는 B이다 => 성립, 말이되면 => 상속,A:부모 B:자식
A는 B를 가지고 있다 => 성립 => 포함,A:클래스 B:멤버

예시:
원은 도형이다 = 도형:부모, 원:자식
원은 점(중심)을 가지고 있다 = 원:클래스, 점: 멤버변수

스마트폰,카메라 = 포함, 클래스:스마트폰,멤버변수:카메라

상속과 포함의 차이
상속은 자식이 사용할 수 없는것 : private으로 된 메서드나 멤버변수
포함은 클래스가 멤버변수에서 사용할 수 없는것 : private 나 protected로 된 메서드나 멤버변수

상속은 멤버변수(일반변수)를 사용하기 위해 초기화를 하지 않아도 된다.
포함에서 멤버변수(객체)는 new를 이용하여 객체를 생성후 해당 객체의 멤버변수(일반변수)를 사용할 수 있다.

포함 : 클래스A의 멤버변수로 클래스B의 객체가 오는것
	Child클래스의 멤버 변수로 Point클래스의 p1이 오는것

class A { public void test(){} }
class B { public void test(){} }
class C extendsA,B {} 
이럴 경우 A와B의 메서드명, 매개변수가 같아 구분할수가 없기 때문에 부모는 1개만 가능하다.

public	: 나 + 패키지 + 자식클래스들 + 일반클래스들
protected: 나 + 패키지 + 자식클래스들
(default)	: 나 + 패키지
private	: 나

this()와 super()는 생성자 코드에서만 사용 가능하다.
다른 메서드에서는 사용할 수 없다.

this는 내 객체정보, htis()는 내 생성자
