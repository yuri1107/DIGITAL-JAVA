메서드 : 하나의 기능을 하도록 모아놓은 코드
클래스 : 어떠한 정보를 나타내기 위해 모아놓은 코드
- 변수 : 정보를 관리
- 메서드 : 기능을 관리 - 편하게 쓰기 위해 (이왕이면 여러번)
- 생성자 : 변수 초기화

메소드와 생성자의 호출 하는 시기
- 메소드는 메소드를 호출할 때 실행
- 생성자는 객체를 생성할 때만 실행, 생성자는 중간에 직접 호출할 수가 없다.

오버로딩 : 동일한 이름을 가진 생성자나 메소드가 2개 이상인 경우
	아래를 만족하면 오버로딩, 만족하지 않으면 에러발생 (교재 283p)
- 메서드 이름이 같아야 한다.
- 매개변수의 개수 또는 타입(자료형)이 달라야 한다. (매개변수가 달라야한다.)

클래스 변수 / 메서드 : static
객체 변수 / 메서드 : static 없음

- 클래스 변수는 객체 메서드에서 사용 가능하다 (ㅇ) ㅇ 사용 가능함
- 객체변수는 클래스 메서드에서 사용 가능하다 (ㄴ) ㄴ 사용 못함 
- 클래스 메서드는 객체 메서드에서 사용 가능하다 (ㅇ) ㅇ 사용 가능함
- 객체 메서드는 클래스 메서드에서 사용 가능하다 (ㄴ) ㄴ 사용 못함

~에서 가 기준으로 만들어져 있는것
객체는 만들어놨을수도있고 안만들어놨을수도 있기 때문에 불확실한 경우 제약이 있을 수 있다.
클래스가 있으면 클래스변수는 무조건 만들어져 있다고 생각하는게 편리함
클래스가 있어도 객체는 안만들었을수도 있음




Point {
	private int x,y;
	public void print(){}
	public void move(int x1, int y1){}
	public void setX(int x1){}
	public int getX(){}
}